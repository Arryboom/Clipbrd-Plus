using System;
using System.Collections.Generic;
using System.Configuration;
using System.IO;
using System.Linq;
using System.Media;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Forms;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using MyVariable;
using MessageBox = System.Windows.MessageBox;
using UserControl = System.Windows.Controls.UserControl;


namespace Clipbrd_Plus
{
    /// <summary>
    /// gensetting.xaml 的交互逻辑
    /// </summary>
    public partial class Gensetting : UserControl
    {
        public Gensetting()
        {
            InitializeComponent();

            if (_languageIndexShow == false)
            {
                LanguageSetIndexShow();
            }
            else
            {
                if (MyVariable.Variable.LanguageTemp != -1)
                {
                    LanguageList.SelectedIndex = MyVariable.Variable.LanguageTemp;
                }

            }

            CbStaringRun.IsChecked = ClipBoardSet.Default.StartUp;
            CbPlayVoice.IsChecked = ClipBoardSet.Default.PlayVoice;
            TbVoicePath.Text = ClipBoardSet.Default.VoicePath;
            TbHistoryNumber.Text = ClipBoardSet.Default.HistoryNumber;
            LanguageList.SelectedIndex = ClipBoardSet.Default.LanguageIndex;
        }

        private bool _languageIndexShow = false;

        //读取语言索引并显示在组合框中
        private void LanguageSetIndexShow()
        {

            LanguageList.SelectedIndex = MyVariable.Variable.LanguageIndex;
            _languageIndexShow = true;
        }



        //语言选择框中语言被改变后，重载UI语言
        private void LanguageList_OnSelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (_languageIndexShow == true)
            {
                int index = LanguageList.SelectedIndex;
                // int index = MyVariable.Variable.LanguageIndex;

                if (index != -1)
                {
                    switch (index)
                    {
                        case 0:

                            PublicFuncition.ReviseConfig("Language", "0");
                            PublicFuncition.SetLanguage("zh-CN");
                            MyVariable.Variable.LanguageTemp = 0;
                            break;

                        case 1:
                            PublicFuncition.ReviseConfig("Language", "1");
                            PublicFuncition.SetLanguage("en-US");
                            MyVariable.Variable.LanguageTemp = 1;
                            break;

                    }
                    LanguageSetInfo.Visibility = Visibility.Visible;
                    //  AppRestartButton.Visibility = Visibility.Visible;
                    //_languageIndexShow = false;
                }
            }








        }

        //重启应用程序
        private void ButtonBase_OnClick(object sender, RoutedEventArgs e)
        {
            System.Windows.Forms.Application.Restart();

            Environment.Exit(0);
        }

        //修改并保存程序的开机自启动选项
        private void CbStaringRun_OnClick(object sender, RoutedEventArgs e)
        {
            ClipBoardSet.Default.StartUp = Convert.ToBoolean(CbStaringRun.IsChecked);
            ClipBoardSet.Default.Save();//保存配置
        }

        //修改并保存程序的提示音播放选项
        private void CbPlayVoice_OnClick(object sender, RoutedEventArgs e)
        {
            ClipBoardSet.Default.PlayVoice = Convert.ToBoolean(CbPlayVoice.IsChecked);
            ClipBoardSet.Default.VoicePath = TbVoicePath.Text;
            ClipBoardSet.Default.Save();//保存配置
        }

        private void BrowseVoice_OnClick(object sender, RoutedEventArgs e)
        {
            OpenFileDialog openFile = new OpenFileDialog();
            openFile.Filter = "声音文件(*.wav)|*.wav";
            openFile.ShowDialog();
            string path = openFile.FileName;
           

            if (path != null && path != "")
            {

                TbVoicePath.Text = path;
                ClipBoardSet.Default.VoicePath = TbVoicePath.Text;
                ClipBoardSet.Default.Save();//保存配置
            }

        }

        private void BtListen_OnClick(object sender, RoutedEventArgs e)
        {
            SoundPlayer spPlayer=new SoundPlayer(TbVoicePath.Text);
            spPlayer.Play();
        }
    }
}
